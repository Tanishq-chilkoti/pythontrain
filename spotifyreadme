Spotify Song Clustering and Recommendation
This project analyzes Spotify song features to group similar songs using K-Means and DBSCAN clustering algorithms, and provides a simple recommendation system based on these clusters.

Table of Contents
Project Title

Table of Contents

Features

Installation

Usage

Contributing

License

Contact

Features
Data Preprocessing: Loads song data, handles missing values, and scales features for optimal clustering performance.

K-Means Clustering: Implements K-Means to group songs, with an automated method to determine the optimal number of clusters using the Silhouette Score.

DBSCAN Clustering: Utilizes DBSCAN for density-based clustering, capable of identifying noise points and arbitrarily shaped clusters.

Model Evaluation: Evaluates the performance of both K-Means and DBSCAN models using Silhouette Score and Davies-Bouldin Index.

Song Recommendation System: Provides a function to recommend similar songs based on their assigned cluster, using either K-Means or DBSCAN results.

Installation
To set up and run this project locally, follow these steps:

# Clone the repository
git clone https://github.com/your-username/your-project.git

# Navigate to the project directory
cd your-project

# Install dependencies
pip install pandas numpy matplotlib seaborn scikit-learn



Usage
After installation, you can run the main script to perform the clustering analysis and get song recommendations.

# Assuming your script is named 'spotify_clustering.py'
python spotify_clustering.py



The script will:

Load and preprocess the SpotifyFeatures.csv dataset.

Perform K-Means and DBSCAN clustering.

Print evaluation metrics for both models.

Display a plot of Silhouette Score vs. K for K-Means.

Provide an example of song recommendations based on the clustering results.

Contributing
Contributions are welcome! Please follow these steps:

Fork the repository.

Create a new branch (git checkout -b feature/AmazingFeature).

Make your changes.

Commit your changes (git commit -m 'Add some AmazingFeature').

Push to the branch (git push origin feature/AmazingFeature).

Open a Pull Request.

License
This project is licensed under the MIT License - see the LICENSE.md file for details.

Contact
Tanishq Chilkoti - tanishqchilkoti@gmail.com

